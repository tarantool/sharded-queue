credentials:
  users:
    client:
      password: 'secret'
      roles: [super]
    replicator:
      password: 'secret'
      roles: [replication]
    storage:
      password: 'secret'
      roles: [sharding]

iproto:
  advertise:
    peer:
      login: replicator
    sharding:
      login: storage

sharding:
  bucket_count: 3000

groups:
  storages:
    roles: ['roles.sharded-queue-storage']
    roles_cfg:
      roles.sharded-queue-storage:
        cfg:
          metrics: true
        tubes:
          test_tube: {}
    sharding:
      roles: [storage]
    replication:
      failover: manual
    replicasets: 
      storage-001:
        leader: storage-001-a
        instances: 
          storage-001-a:
            iproto:
              listen:
                - uri: localhost:3302
          storage-001-b:
            iproto:
              listen:
                - uri: localhost:3303
      storage-002:
        leader: storage-002-a
        instances: 
          storage-002-a:
            iproto:
              listen:
                - uri: localhost:3304
          storage-002-b:
            iproto:
              listen:
                - uri: localhost:3305
  routers:
    roles: ['roles.sharded-queue-router']
    roles_cfg:
      roles.sharded-queue-router:
        cfg:
          metrics: true
    app:
      module: init
    sharding:
      roles: [router]
    replicasets: 
      router-001:
        instances: 
          router-001-a:
            iproto:
              listen:
                - uri: localhost:3301
